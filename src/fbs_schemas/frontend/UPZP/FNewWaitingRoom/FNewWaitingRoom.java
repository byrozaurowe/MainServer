// automatically generated by the FlatBuffers compiler, do not modify

package UPZP.FNewWaitingRoom;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FNewWaitingRoom extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static FNewWaitingRoom getRootAsFNewWaitingRoom(ByteBuffer _bb) { return getRootAsFNewWaitingRoom(_bb, new FNewWaitingRoom()); }
  public static FNewWaitingRoom getRootAsFNewWaitingRoom(ByteBuffer _bb, FNewWaitingRoom obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FNewWaitingRoom __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String city() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer cityAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer cityInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public int clientsMax() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createFNewWaitingRoom(FlatBufferBuilder builder,
      int cityOffset,
      int nameOffset,
      int clientsMax) {
    builder.startTable(3);
    FNewWaitingRoom.addClientsMax(builder, clientsMax);
    FNewWaitingRoom.addName(builder, nameOffset);
    FNewWaitingRoom.addCity(builder, cityOffset);
    return FNewWaitingRoom.endFNewWaitingRoom(builder);
  }

  public static void startFNewWaitingRoom(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addCity(FlatBufferBuilder builder, int cityOffset) { builder.addOffset(0, cityOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addClientsMax(FlatBufferBuilder builder, int clientsMax) { builder.addInt(2, clientsMax, 0); }
  public static int endFNewWaitingRoom(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishFNewWaitingRoomBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedFNewWaitingRoomBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FNewWaitingRoom get(int j) { return get(new FNewWaitingRoom(), j); }
    public FNewWaitingRoom get(FNewWaitingRoom obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

