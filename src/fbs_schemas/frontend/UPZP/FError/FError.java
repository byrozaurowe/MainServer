// automatically generated by the FlatBuffers compiler, do not modify

package UPZP.FError;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class FError extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static FError getRootAsFError(ByteBuffer _bb) { return getRootAsFError(_bb, new FError()); }
  public static FError getRootAsFError(ByteBuffer _bb, FError obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FError __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String message() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer messageAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer messageInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }

  public static int createFError(FlatBufferBuilder builder,
      int messageOffset) {
    builder.startTable(1);
    FError.addMessage(builder, messageOffset);
    return FError.endFError(builder);
  }

  public static void startFError(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addMessage(FlatBufferBuilder builder, int messageOffset) { builder.addOffset(0, messageOffset, 0); }
  public static int endFError(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishFErrorBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedFErrorBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FError get(int j) { return get(new FError(), j); }
    public FError get(FError obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

